# /mailviewer/views.py
画面名: メール一覧
  - 関数一覧:
    - 関数名: index
      - 関数説明: メール一覧を表示する
      - 処理:
        - post:
          - mailSearchFormから入力があった条件でmailデータを検索
          - データを取得
            - メインModel: mail: メールデータ
            - サブmodel: なし
            - 画面項目:
              - 項目: メールID
                - model: mail
                - カラム: email_id
              - 項目: タイトル
                - model: mail
                - カラム: subject
              - 項目: FROM
                - model: mail
                - カラム: sender
              - 項目: TO
                - model: mail
                - カラム: recipients
              - 項目: CC
                - model: mail
                - カラム: cc
              - 項目: 受信日
                - model: mail
                - カラム: sent_at
              - 項目: 本文
                - model: mail
                - カラム: body
              - 項目: 登録日
                - model: mail
                - カラム: insert_date
              - 項目: 更新日
                - model: mail
                - カラム: update_date
              - 項目: 詳細リンク
                - model: なし
                - リンク先: mail_detail
                - リンクパラメータ: email_id
                - 処理: 
                  - メールの詳細画面に遷移する
                  - 詳細画面は別タブで開く
          - 0件: 
            - message: データがありません。
        - get:
          - mailsは0件 
         - コンテキスト:
            title: メール一覧
            message: message
            mails: mails
        - 表示するテンプレート: /templates/mailviewer/index.html

    - 関数名: input
      - 関数説明: emlファイルの取込画面
      - 処理:
        - post:
          - EmlUploadFormから入力があった条件でemlファイルをアップロード
          - アップロードされたファイルを処理
            - メールデータを作成
            - メールデータの保存
              - メインModel: mail: メールデータ
              - サブmodel: なし
              - 画面項目:
                - 項目: メールID
                  - model: mail
                  - カラム: email_id
                - 項目: タイトル
                  - model: mail
                  - カラム: subject
                - 項目: FROM
                  - model: mail
                  - カラム: sender
                - 項目: TO
                  - model: mail
                  - カラム: recipients
                - 項目: CC
                  - model: mail
                  - カラム: cc
                - 項目: 受信日
                  - model: mail
                  - カラム: sent_at
                  - フォーマット: YYYY-MM-DD HH:MM[:ss[.uuuuuu]][TZ]
                - 項目: 本文
                  - model: mail
                  - カラム: body
                  - 改行・空白も保存する
                - 項目: 登録日
                  - model: mail
                  - カラム: insert_date
                  - フォーマット: YYYY-MM-DD HH:MM[:ss[.uuuuuu]][TZ]
                - 項目: 更新日
                  - model: mail
                  - カラム: update_date
                  - フォーマット: YYYY-MM-DD HH:MM[:ss[.uuuuuu]][TZ]
            - 添付ファイルをAttachモデルに保存
            - メインModel: attach: 添付ファイル
            - サブmodel: なし
            - 画面項目:
              - 項目: メールID
                - model: attach
                - カラム: email_id
              - 項目: 添付ファイル名
                - model: attach
                - カラム: attach_name
                - セットする値: part.get_filename()
              - 項目: 添付ファイルデータ
                - model: attach
                - カラム: attach_file
                - セットする値: part.get_content()
          - 取込完了メッセージを表示
        - get:
          - コンテキスト:
            title: emlファイル取込
            message: message
        - 表示するテンプレート: /templates/mailviewer/input.html
    - 関数名: mail_detail
      - 関数説明: メール本文の詳細表示
      - 処理:
        - post:
          - なし
        - get:
          - mail_idを取得
          - mail_idに対応するメールデータを取得
          - メールデータをMailFormにセット
          - mail_idに対応する添付ファイルを取得: 
            - データが無い場合は空のリストを返す
            - データがあればattachmentsにセット
          - コンテキスト:
            title: メール詳細
            mailForm: バインドしたMailForm
            attachments: attachments
        - 表示するテンプレート: /templates/mailviewer/mail_detail.html

    - 関数名: attach
      - 関数説明: 添付ファイルをダウンロードする
      - 処理:
        - attach_idを取得
        - attach_idに対応する添付ファイルデータを取得
        - 添付ファイルが存在しない場合は404エラーを返す
        - HttpResponseでファイルを返す
          - ファイル名: attach.attach_nameの文字列（日本語含む）
          - Content-Type: mime_type (推測されるMIMEタイプ)
          - Content-Disposition: attachment; filename="attach.attach_name"
        - 表示するテンプレート: なし (直接ファイルを返す)
